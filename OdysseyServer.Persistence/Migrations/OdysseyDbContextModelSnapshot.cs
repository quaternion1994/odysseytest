// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdysseyServer.Persistence;

namespace OdysseyServer.Persistence.Migrations
{
    [DbContext(typeof(OdysseyDbContext))]
    partial class OdysseyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.Ability", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid?>("AbilityStatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("AbilityStatId");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.AbilityStat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("Attack")
                        .HasColumnType("int")
                        .HasColumnName("Attack");

                    b.Property<int>("Defence")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.HasKey("Id");

                    b.ToTable("AbilityStat");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<int>("GearTier")
                        .HasColumnType("int")
                        .HasColumnName("GearTier");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("Power")
                        .HasColumnType("int")
                        .HasColumnName("Power");

                    b.Property<int>("Xp")
                        .HasColumnType("int")
                        .HasColumnName("Xp");

                    b.HasKey("Id");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.CharacterAbilities", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("AbilityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AbilityId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CharacterId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("AbilityId1");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CharacterId1");

                    b.ToTable("CharacterAbilities");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.CharacterGroups", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<Guid>("CharacterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("GroupId");

                    b.ToTable("CharacterGroups");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IconName");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.Ability", b =>
                {
                    b.HasOne("OdysseyServer.Persistence.Entities.AbilityStat", "AbilityStat")
                        .WithMany("Abilities")
                        .HasForeignKey("AbilityStatId")
                        .HasConstraintName("FK_Ability_AbilityStat");

                    b.Navigation("AbilityStat");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.CharacterAbilities", b =>
                {
                    b.HasOne("OdysseyServer.Persistence.Entities.Ability", "Ability")
                        .WithMany()
                        .HasForeignKey("AbilityId")
                        .HasConstraintName("FK_CharacterAbilities_Ability")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OdysseyServer.Persistence.Entities.Ability", null)
                        .WithMany("CharacterAbilities")
                        .HasForeignKey("AbilityId1");

                    b.HasOne("OdysseyServer.Persistence.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("FK_CharacterAbilities_Characters")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OdysseyServer.Persistence.Entities.Character", null)
                        .WithMany("CharacterAbilities")
                        .HasForeignKey("CharacterId1");

                    b.Navigation("Ability");

                    b.Navigation("Character");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.CharacterGroups", b =>
                {
                    b.HasOne("OdysseyServer.Persistence.Entities.Character", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .HasConstraintName("FK_CharacterGroups_Characters")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OdysseyServer.Persistence.Entities.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_CharacterGroups_Group")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Character");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.Ability", b =>
                {
                    b.Navigation("CharacterAbilities");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.AbilityStat", b =>
                {
                    b.Navigation("Abilities");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.Character", b =>
                {
                    b.Navigation("CharacterAbilities");
                });
#pragma warning restore 612, 618
        }
    }
}
