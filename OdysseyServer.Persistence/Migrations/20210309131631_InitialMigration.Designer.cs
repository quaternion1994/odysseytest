// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdysseyServer.Persistence;

namespace OdysseyServer.Persistence.Migrations
{
    [DbContext(typeof(OdysseyDbContext))]
    [Migration("20210309131631_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbilityDboCharacterDbo", b =>
                {
                    b.Property<long>("AbilitiesId")
                        .HasColumnType("bigint");

                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.HasKey("AbilitiesId", "CharacterId");

                    b.HasIndex("CharacterId");

                    b.ToTable("AbilityDboCharacterDbo");
                });

            modelBuilder.Entity("CharacterDboGroupDbo", b =>
                {
                    b.Property<long>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<long>("GroupsId")
                        .HasColumnType("bigint");

                    b.HasKey("CharacterId", "GroupsId");

                    b.HasIndex("GroupsId");

                    b.ToTable("CharacterDboGroupDbo");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.AbilityDbo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AbilityType")
                        .HasColumnType("int")
                        .HasColumnName("AbilityType");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("int")
                        .HasColumnName("RequiredLevel");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Ability");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.AbilityStatsDbo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AbilityId")
                        .HasColumnType("bigint");

                    b.Property<int>("Attack")
                        .HasColumnType("int")
                        .HasColumnName("Attack");

                    b.Property<int>("Defence")
                        .HasColumnType("int")
                        .HasColumnName("Defence");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId")
                        .IsUnique();

                    b.ToTable("AbilityStats");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.CharacterDbo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Defence")
                        .HasColumnType("int")
                        .HasColumnName("Defence");

                    b.Property<int>("GearTier")
                        .HasColumnType("int")
                        .HasColumnName("GearTier");

                    b.Property<int>("Health")
                        .HasColumnType("int")
                        .HasColumnName("Health");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Name");

                    b.Property<int>("Offence")
                        .HasColumnType("int")
                        .HasColumnName("Offence");

                    b.Property<int>("Power")
                        .HasColumnType("int")
                        .HasColumnName("Power");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Xp")
                        .HasColumnType("int")
                        .HasColumnName("Xp");

                    b.Property<int>("XpToNextLevel")
                        .HasColumnType("int")
                        .HasColumnName("XpToNextLevel");

                    b.HasKey("Id");

                    b.ToTable("Character");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.GroupDbo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IconName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IconName");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.LevelExperienceDbo", b =>
                {
                    b.Property<int>("ExperienceForUp")
                        .HasColumnType("int")
                        .HasColumnName("ExperienceForUp");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.ToTable("LevelExperience");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.LevelStatsDbo", b =>
                {
                    b.Property<int>("Defence")
                        .HasColumnType("int")
                        .HasColumnName("Defence");

                    b.Property<int>("Health")
                        .HasColumnType("int")
                        .HasColumnName("Health");

                    b.Property<int>("LevelNumber")
                        .HasColumnType("int")
                        .HasColumnName("LevelNumber");

                    b.Property<int>("Offence")
                        .HasColumnType("int")
                        .HasColumnName("Offence");

                    b.ToTable("LevelStats");
                });

            modelBuilder.Entity("AbilityDboCharacterDbo", b =>
                {
                    b.HasOne("OdysseyServer.Persistence.Entities.AbilityDbo", null)
                        .WithMany()
                        .HasForeignKey("AbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdysseyServer.Persistence.Entities.CharacterDbo", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterDboGroupDbo", b =>
                {
                    b.HasOne("OdysseyServer.Persistence.Entities.CharacterDbo", null)
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OdysseyServer.Persistence.Entities.GroupDbo", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.AbilityStatsDbo", b =>
                {
                    b.HasOne("OdysseyServer.Persistence.Entities.AbilityDbo", "Ability")
                        .WithOne("Stats")
                        .HasForeignKey("OdysseyServer.Persistence.Entities.AbilityStatsDbo", "AbilityId")
                        .HasConstraintName("FK_Ability_AbilityStats")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");
                });

            modelBuilder.Entity("OdysseyServer.Persistence.Entities.AbilityDbo", b =>
                {
                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
